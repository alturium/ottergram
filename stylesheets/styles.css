@font-face {
  font-family: "lakeshore";
  src: url("fonts/LAKESHOR-webfont.eot");
  src: url("fonts/LAKESHOR-webfont.eot?#iefix") format("embedded-opentype"),
    url("fonts/LAKESHOR-webfont.woff") format("woff"),
    url("fonts/LAKESHOR-webfont.ttf") format("truetype"),
    url("fonts/LAKESHOR-webfont.svg#lakeshore") format("svg");
  font-weight: normal;
  font-style: normal;
}

html,
body {
  height: 100%;
}

header,
footer {
  margin: 0;
  padding: 8px 4px;
  background: cornflowerblue;
  color: inherit;
}
html, body {
  height: 100%;
}

body {
  display: flex;   /* main axis goes left to right */
  flex-direction: column; /* main axis goes top to bottom now */
  font-size: 10px;
  background: rgb(149, 194, 215);
  display: flex;
  flex-direction: column;
  font-size: 10px;
}

div {
  border: 1px greenyellow solid;
}

a {
  /* turn-off underlining for thumbnail items */
  text-decoration: none;
}

button {
  background-color: white;
}

.main-header {
  flex: 0 1 auto;  /* 0 do not grow larger, 1 i will shrink as needed, auto please calc my size */
}

.main-content {
  flex: 1 1 auto;   /* 1 grow as much as possible, relative to sibling (header) */
  flex-direction: column;
   display: flex;
}

/* added this to force scrollbar horizontal */
/* ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 4px;
  height: 10px;
}
::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color:  rgba(0, 0, 0, .5);
  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);
  box-shadow: 5px 10px #888888;
} */

.logo-text {
  font-family: lakeshore;
  background: white;
  text-align: center;
  text-transform: uppercase;
  font-size: 37px;
}

.thumbnail-list {
  order: 2;   /* draw after any siblings that have lower source order */
  justify-content: space-between;
  /* override the ul padding so image are not indented */
  display: flex; /* for children */
  order: 0;
  flex: 0 1 auto; /* No growth, Yes-shrink; for my parent vs siblings */
  padding: 0;
  white-space: nowrap;
  overflow-x: auto;
  list-style: none;
  min-height: 120px;
}

.thumbnail-item {
  position: relative;
  display: flex;
  padding: 0;
  min-width: 120px;
  max-width: 120px;
  /*(border: 1px solid rgb(100%, 100%, 100%); /* fallback for some browsers */
}

.thumbnail-item {
  display: inline-block;
  /* position: relative; */
  min-width: 120px;
  max-width: 120px;
  /* margin: 0; */
  /* width: 125px; */
  margin: 0;
  width: 125px;
  /* border: blue 1px solid; */
  border: 1px solid rgb(100%, 100%, 100%); /* fallback for some browsers */
  border: 1px solid rgba(100%, 100%, 100%, 0.8);
}

/* Relationship selectors:
  body span { }    = span descendent of body (right to left)
  body .thumbnail-title {}  = class selector 
  li > span  {} = child, immediate child selector
  li + li = sibling of
  */
/* use sibling combinator + to exclude first item */
.thumbnail-item + .thumbnail-item {
  /* margin-top: 10px; */
}

.thumbnail-image {
  /* position: absolute; */
  /* height: 100%; */
  height: 100px;
  flex: 1 1 auto;
  width: 100%; /* setting width constrains to parent's container width */
  /* note images default to display:inline which adheres to text rendering rules, where letters have
    * a baseline.  Eg. some characters such as p have a descender, so there is whitespace below them 
    * dislay:block remove the whitespace. */
  display: block; /* affect me within my parent container */
  border: white 1px solid;
}

.thumbnail-title {
  font-family: airstream;
  display: block; /* occupy the entire width by their containing element */
  width: 100%;
  margin: 0;
  border: white 1px solid;
  background: rgb(96, 125, 139);
  color: rgb(202, 238, 255);
}

/* switchd from absolute with anchors to flex */
.detail-image-container {
  min-width: auto;
  min-height: 200px;
  /* overflow: hidden; */
  order: 2;
  flex: 1 1 auto;
  display: flex;
  justify-content: center;
  align-items: center;
}
.detail-image-frame {
  position: relative;
  text-align: center;
}

.detail-image {
  width: 80%;
}
.detail-image-title {
  position: absolute;
  bottom: 5px;
  left: 50px;
  color: white;
  font-size: 40px;
  text-shadow: rgba(0, 0, 0, 0.9) 1px 2px 9px;
}

@media all and (min-width: 768px) {
  .main-content {
    flex-direction: row;
    overflow: hidden;
  }
}

/*
 * playground stuff
 */

/* switchd from absolute with anchors to flex */
.detail-image-container {
  flex: 1 1 auto;
  display: flex;
  justify-content: center;
  align-items: center;
}
.detail-image-frame {
  position: relative;
  text-align: center;
}

.detail-image {
  width: 90%;
}
.detail-image-title {
  position: absolute;
  bottom: 5px;
  left: 50px;
  color: white;
  font-size: 40px;
  text-shadow: rgba(0,0,0,0.9) 1px 2px 9px;
 }

/* PLAYGROUND BELOW HERE */

.parent-container {
  overflow: hidden;
  display: flex; /* layout strategy for children */
  flex: 1 1 auto;
  order: 2;
  margin-top: 50px;
  margin-bottom: 50px;
  min-height: 300px;

  /*flex-direction: row; /* stacks items horizontally, left to right */
  /* width: 100%;
  height: 400px;
  border: green 1px solid;  */
  /* position: absolute; */
  /* right: 5px;
  left: 5px;
  bottom: 10px;
  top: 400px; */
}

.left-panel {
  position: relative; /* positioned relative to its normal position, when using relative,
                         * you can use the top, bottom, right, and left properties. */
  width: 70%;
  display: flex;
  border: peru 1px;
}

.embedded-panel {
  /*  position:absolute : The element is removed from the normal document flow, and no space is created for the element in the page layout.
   *  It is positioned relative to its closest positioned ancestor, if any; otherwise, it is placed relative to the 
   *  initial containing block. Its final position is determined by the values of top, right, bottom, and left. */
  position: absolute;
  right: 0px; /* from the right edge */
  display: flex;
  flex-direction: column;
  align-items: stretch; /* children elements will expand to fill the container */
  width: 50%; /* 50% of parents container size */
  height: 100%;
  border: magenta 1px solid;
  background-color: rgba(100%, 100%, 100%, 0.4);
}
.right-panel {
  position: relative;
  width: 30%; /* 30% of container's fill space */
  display: flex;
  flex-direction: column; /* stack items vertically */
  border: 1px purple solid;
}

.top-left-button {
  width: 100px;
  height: 100px;
  position: absolute; /* positioned relative to nearest positioned ancestor, but
                        * if no positioned ancestors, then uses the document body
                        */
  left: 30;
  top: -30;
}

.bottom-left-button {
  width: 100px;
  height: 100px;
  position: absolute; /* positioned relative to nearest positioned ancestor, but
                        * if no positioned ancestors, then uses the document body
                        */
  left: 30;
  bottom: -30;
}

.top-right-button {
  width: 100px;
  height: 100px;
  position: absolute; /* positioned relative to nearest positioned ancestor, but
                        * if no positioned ancestors, then uses the document body
                        */
  right: 30;
  top: -30;
}

.bottom-right-button {
  width: 100px;
  height: 100px;
  position: absolute; /* positioned relative to nearest positioned ancestor, but
                        * if no positioned ancestors, then uses the document body
                        */
  right: 30;
  bottom: -30;
}

.title {
  margin: auto; /* one way to horizontally and vertially align text */
  width: 50%; /* horizontal alignment center OR use (flex) align-items: center */
  border: blue 1px solid;
  text-align: center;
}

.middle-panel {
  background-color: rgba(0, 128, 128, 0.8);
  z-index: 3;
  display: flex;
  justify-content: center;
  margin: auto; /* one way to horizontally and vertially align text */
  width: 50%; /* horizontal alignment center OR use (flex) align-items: center */
  border: blue 1px solid;
  text-align: center;
}

#my-title {
  /* position: relative;
  top: 100px;
  width: 30%;
  border: lightpink 1px solid; */
}

.floating-button {
  /* does not work because on middle-panel and inside ul/li */
  z-index: 3; /* otherwise button is "masked" by embedded right side panel */
}
